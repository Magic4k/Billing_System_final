/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Bill;
import db_connection.db_connection;
import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Mohamed2
 */
public class Insert_Bill extends javax.swing.JFrame {
    ArrayList <Bill> Data;
    ArrayList <Bill> Data1=new ArrayList <>();
    public void Table_Content(){
        try{ 
     
     db_connection c= new db_connection();
           
           //ResultSet rs =c.fetch("products");
        
            Connection conn=c.connect();
            String query = "SELECT * FROM  products";
            PreparedStatement stmt = conn.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();
            pt.setModel(DbUtils.resultSetToTableModel(rs));
         conn.close();
         stmt.close();
            }
            
            catch (SQLException ee){
            
            ee.getMessage();
        }
    }
    public void OrderNumber()
    {
          try{ 
     
            db_connection c= new db_connection();
            Connection conn=c.connect();
            String order="select order_id from orders";
            PreparedStatement stmt1 = conn.prepareStatement(order);
            ResultSet rs = stmt1.executeQuery();
            
            while(rs.next())
            {
                String orderi=rs.getString("order_id");
                ONUM.setText("Order Number : "+orderi);
                System.out.println(orderi);
            }
            
            conn.close();
            stmt1.close();
            }
            
            catch (SQLException ee){
            
            ee.getMessage();
        }
    
       }
    
    
    
    public void content()
    {
        try{ 
     
     db_connection c= new db_connection();
           
           //ResultSet rs =c.fetch("products");
        
            Connection conn=c.connect();
            String query = "SELECT * FROM  products";
            PreparedStatement stmt = conn.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();
//            DefaultTableModel m=(DefaultTableModel)pt.getModel();
//            Object[] row=new Object[5];
            while(rs.next())
            {
                Bill s=new Bill(rs.getInt("Product_id"),rs.getString("Name"),rs.getInt("Price"),rs.getInt("Quantity"),rs.getString("Category"));
                Data.add(s);
//                m.addRow(row);
            }
//             for(int i=0;i<Data.size();i++)
//                {
//            System.out.print(Data.get(i).getCategory());
//            System.out.print(Data.get(i).getPrice());
//            System.out.print(Data.get(i).getProduct_id());
//            System.out.print(Data.get(i).getProduct_name());
//            System.out.print(Data.get(i).getQuantity());
//                }
         conn.close();
         stmt.close();
            }
            
            catch (SQLException ee){
            
            ee.getMessage();
        }
    }
        
    /**
     * Creates new form Bill_View
     */
    public Insert_Bill() {
        this.Data = new ArrayList <>();
        initComponents();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pt = new javax.swing.JTable();
        ONUM = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        pt1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        tot = new javax.swing.JLabel();
        disc = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        distot = new javax.swing.JLabel();
        Submit = new javax.swing.JButton();
        tf = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        remove_Bill = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Products");

        pt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Proudct_id", "product_Name", "Price", "Quantity", "Category", "Discount"
            }
        ));
        pt.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                ptAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        pt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ptMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(pt);

        ONUM.setText("Order Nimber : ?");
        ONUM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ONUMActionPerformed(evt);
            }
        });

        pt1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO", "Proudct", "Price", "Quantity", "Category"
            }
        ));
        jScrollPane2.setViewportView(pt1);

        jLabel4.setText("TOTAL");

        tot.setText("KZA POUND");

        disc.setText("DISCOUNT 50% : NEW_pound");

        jLabel7.setText("TOTAL");

        distot.setText("tot_dis");

        Submit.setText("Sumbit Order");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfActionPerformed(evt);
            }
        });

        jButton1.setText("Find");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setText("Search");

        remove_Bill.setText("Remove");
        remove_Bill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_BillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jButton1)
                                .addGap(0, 26, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tf)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(remove_Bill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Submit, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(distot, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(disc, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tot, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(ONUM, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jButton1)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(ONUM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tot, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(disc, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(distot, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(remove_Bill, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ONUMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ONUMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ONUMActionPerformed

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
            DefaultTableModel row=(DefaultTableModel)pt1.getModel();
            if(row.getRowCount()==0)
            {
                JOptionPane.showMessageDialog(null, "Table is Empty");
            }
            else
            {
                try{ 
     
            db_connection c= new db_connection();
            Connection conn=c.connect();
            String order="select order_id from orders ORDERED BY order_id DESC";
            PreparedStatement stmt1 = conn.prepareStatement(order);
            ResultSet rs = stmt1.executeQuery();
            String orderi="";
            while(rs.next())
            {
                orderi=rs.getString("order_id");
            }
            for(int i=0;i<row.getRowCount();i++)
            {
                String p_name= row.getValueAt(i, 1).toString();
                String p_Quan= row.getValueAt(i, 3).toString();
                String query = "insert into Bill1 (order_id,product_name,Quantity) values(?,?,?) ";
                PreparedStatement stmt = conn.prepareStatement(query);
                stmt.setString(1, orderi);
                stmt.setString(2, p_name);
                stmt.setString(3, p_Quan);
                stmt.execute();
            }
            JOptionPane.showMessageDialog(null,"Data Inserted Successfully");
            row.setRowCount(0);//clear table after submit
            conn.close();
            stmt1.close();
            }
            
            catch (SQLException ee){
            
            ee.getMessage();
        }
    
            }
    }//GEN-LAST:event_SubmitActionPerformed
double sum=0;
double dis=0;
double calc=0;
double diastot=0;

int x=0;

    private void ptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ptMouseClicked
        DefaultTableModel model=(DefaultTableModel)pt.getModel();
        DefaultTableModel row=(DefaultTableModel)pt1.getModel();
        int rowIndex=pt.getSelectedRow();

        String s=JOptionPane.showInputDialog(null, "enter the quantity");

        String p_id=model.getValueAt(rowIndex, 0).toString();
        String p_name= model.getValueAt(rowIndex, 1).toString();
        String p_price=model.getValueAt(rowIndex, 2).toString();
        String p_dis=model.getValueAt(rowIndex, 5).toString();
        String p_Quan= model.getValueAt(rowIndex, 3).toString();
        String p_cate=model.getValueAt(rowIndex, 4).toString();

        if(Integer.parseInt(s) > Integer.parseInt(p_Quan))
        {
            JOptionPane.showMessageDialog(null,"THERE IS NO QUANTITY");
        }
        else{
            x+=Integer.parseInt(p_Quan)-Integer.parseInt(s);
            if(x > Integer.parseInt(p_Quan))
            {
                JOptionPane.showMessageDialog(null,"THIS PRODUCT IS FINISHED ");
            }else {
            p_Quan=Integer.toString(x);
            System.out.println(p_Quan);
        row.addRow(new Object[]{p_id , p_name , p_price ,s , p_cate});

        row.addRow(new Object[]{p_id , p_name , p_price ,p_Quan , p_cate});

        double price=Double.parseDouble(p_price);
        sum+=price;
        dis=Double.parseDouble(p_dis);
        calc+=dis*(price/100);
        diastot= sum-calc;
        tot.setText(Double.toString(sum));
        
        disc.setText("Discount"+Double.toString(dis)+" : -" + Double.toString(calc));
        distot.setText(Double.toString(diastot));

        }
        }

    }//GEN-LAST:event_ptMouseClicked

    private void ptAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_ptAncestorAdded
        Table_Content();
    }//GEN-LAST:event_ptAncestorAdded

    private void tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{ 
     
     db_connection c= new db_connection();
           String product_name = tf.getText();
            Connection conn=c.connect();
           String query = "SELECT * FROM  products where name like ? ";
           PreparedStatement stmt = conn.prepareStatement(query);
           stmt.setString(1, "%"+product_name+"%");
         ResultSet rs = stmt.executeQuery();
                    pt.setModel(DbUtils.resultSetToTableModel(rs));
         conn.close();
         stmt.close();
            }
            
            catch (SQLException ee){
            
            ee.getMessage();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void remove_BillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_BillActionPerformed
        DefaultTableModel row=(DefaultTableModel)pt1.getModel();
        DefaultTableModel model=(DefaultTableModel)pt.getModel();
        try {
        int rowIndex=pt.getSelectedRow();
        row.removeRow(rowIndex);
        String p_price=model.getValueAt(rowIndex, 2).toString();
        String p_dis=model.getValueAt(rowIndex, 5).toString();
        double price=Double.parseDouble(p_price);
        sum-=price;
        dis=Double.parseDouble(p_dis);
        calc-=dis*(price/100);
        diastot= sum-dis*(price/100);
        tot.setText(Double.toString(sum));
        
        disc.setText("Discount"+Double.toString(dis)+" : -" + Double.toString(calc));
        distot.setText(Double.toString(diastot));
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_remove_BillActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Insert_Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Insert_Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Insert_Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Insert_Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Insert_Bill().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ONUM;
    private javax.swing.JButton Submit;
    private javax.swing.JLabel disc;
    private javax.swing.JLabel distot;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JTable pt;
    private javax.swing.JTable pt1;
    private javax.swing.JButton remove_Bill;
    private javax.swing.JTextField tf;
    private javax.swing.JLabel tot;
    // End of variables declaration//GEN-END:variables
}
